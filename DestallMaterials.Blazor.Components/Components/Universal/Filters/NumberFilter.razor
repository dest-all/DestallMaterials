@using DestallMaterials.Blazor.Components.Universal.Inputs

@inherits LeftRightLimitPropertyFilter<float>

<Flag 
    Disabled="@(LimitErrored)" 
    Value="Filters" 
    OnValueSet="v=>{ Filters = v; OnFilterChange(); }" />

<NumberInput 
    OnValueSet="v => { Value = new(Value) {Left = v}; OnLimitChanged(); }" 
    InputLabel="@fromLabel" 
    InvalidityCondition="s => invalidityConditionForInputs(LimitErrored)" 
    Value="Value.Left" />

<NumberInput 
    OnValueSet="v => {Value = new(Value) {Right = v}; OnLimitChanged(); }" 
    InvalidityCondition="s => invalidityConditionForInputs(LimitErrored)" 
    InputLabel="@toLabel" 
    Value="Value.Right" />

@code {
    void OnLimitChanged()
    {
        if (Value.Left == default && Value.Right == default)
        {
            Filters = false;
            return;
        }

        if (Value.Right == default)
        {
            Value = new(Value) { Right = float.MaxValue };
        }
        else if (Value.Left == default)
        {
            Value = new(Value) { Left = float.MinValue };
        }
        Filters = !LimitErrored;
        OnFilterChange();
        StateHasChanged();
    }

    string invalidityConditionForInputs(bool error) => error ? "Invalid input." : "";

    string fromLabel => $"{InputLabel}: from";
    string toLabel => $"{InputLabel}: to";
}