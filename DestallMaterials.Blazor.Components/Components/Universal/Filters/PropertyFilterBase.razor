@using Protocol.Models.Filters.DateTimeFilter;
@using Client.Web.View.Components.Universal.Inputs;
@using Common.AdvancedDataStructures;

@typeparam TValue
@typeparam TReturn

@inherits BaseInput<TValue>

@code {
    [Parameter]
    public Action<FilterWithFlag<TValue, bool>, TReturn> OnFilterChange { get; set; } = (v, s) => { };

    [Parameter]
    public bool Filters { get; set; }

    protected FilterWithFlag<TValue, bool> ValueWithFlag => new FilterWithFlag<TValue, bool>() { Filters = Filters, Value = Value };

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    protected virtual TReturn GetResult()
    {
        throw new NotImplementedException();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            OnFilterChange(ValueWithFlag, GetResult());
        }
    }
}