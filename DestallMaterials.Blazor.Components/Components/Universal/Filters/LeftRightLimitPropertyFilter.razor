@inherits ViewComponent

@typeparam TValue where TValue : IComparable<TValue>

@code {
    [Parameter]
    public bool Filters { get; set; }

    [Parameter]
    public Action<ValueWithFlag<LeftRightValuePair<TValue>>> OnValueSet { get; set; } = s => { };

    [Parameter]
    public Action<ValueWithFlag<LeftRightValuePair<TValue>>> OnValueGet { get; set; } = s => { };

    [Parameter]
    public string InputLabel { get; set; }

    [Parameter]
    public LeftRightValuePair<TValue> Value { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    protected virtual bool LimitErrored => Value.Left.CompareTo(Value.Right) > 0;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    protected ValueWithFlag<LeftRightValuePair<TValue>> ValueWithFlag => new()
        {
            Filters = Filters,
            Value = Value
        };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            OnFilterChange();
        }
    }

    protected void OnFilterChange()
    {
        var value = ValueWithFlag;
        if (OnValueSet != null)
        {
            OnValueSet(value);
        }
    }
}