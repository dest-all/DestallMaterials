@inherits ViewComponent

@typeparam TValue where TValue : IComparable<TValue>

@code {

    [Parameter]
    public Action<ValueWithFlag<LeftRightValuePair<TValue>>> OnFilterChange { get; set; } = (v) => { };

    [Parameter]
    public bool Filters { get; set; }

    [Parameter]
    public Action<TValue> OnValueSet { get; set; } = s => { };

    [Parameter]
    public Action<TValue> OnValueGet { get; set; } = s => { };

    [Parameter]
    public string InputLabel { get; set; }

    [Parameter]
    public LeftRightValuePair<TValue> Value { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    protected bool LimitErrored;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    protected ValueWithFlag<LeftRightValuePair<TValue>> ValueWithFlag => new()
        {
            Filters = Filters,
            Value = Value
        };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            OnFilterChange(ValueWithFlag);
        }
    }


}