@using DestallMaterials.Blazor.Components.Universal.Inputs

@inherits LeftRightLimitPropertyFilter<DateTime>

<Flag disabled="@(LimitErrored)" Value="Filters" OnValueSet="v=>{ Filters = v; OnFilterChange(ValueWithFlag); }" />

<DateTimeInput 
    OnValueSet="v => { Value = new(Value) { Left = v }; OnLimitChanged(); }" 
    InputLabel="fromLabel" 
    InvalidityCondition="s => invalidityConditionForInputs(LimitErrored)" 
    Value="Value.Left" />

<DateTimeInput 
    OnValueSet="v => { Value = new(Value) { Right = v }; OnLimitChanged(); }" 
    InvalidityCondition="s => invalidityConditionForInputs(LimitErrored)" 
    InputLabel="toLabel" 
    Value="Value.Right" />


@code {
    void OnLimitChanged()
    {
        if (Value.Left == default && Value.Right == default)
        {
            Filters = false;
            LimitErrored = new();
            return;
        }

        if (Value.Right == default)
        {
            LimitErrored = false;
            Value = new(Value) { Right = default };
        }
        else if (Value.Left == default)
        {
            LimitErrored = false;
            Value = new(Value) { Left = default };
        }

        CheckLeftLessThanRight(Value.Left, Value.Right);

        OnFilterChange(new() { Filters = Filters, Value = Value });

    }

    void CheckLeftLessThanRight(DateTime left, DateTime right)
    {
        if (right < left)
        {
            LimitErrored = true;
            Filters = false;
        }
        StateHasChanged();
    }

    string invalidityConditionForInputs(bool error) => error ? "Invalid input." : "";

    string fromLabel => $"{InputLabel}: from";
    string toLabel => $"{InputLabel}: to";

}