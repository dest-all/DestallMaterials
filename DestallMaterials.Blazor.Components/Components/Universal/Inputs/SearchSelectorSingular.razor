@using MudBlazor
@typeparam TItem

<MudAutocomplete T="TItem"
                 Label=@Label
                 SearchFunc="async filter => await GetItemsByFilter(filter)"
                 ResetValueOnEmptyText="true"
                 CoerceText="true"
                 CoerceValue="true" ToStringFunc="GetItemRepresentation"
                 MaxItems="50"
                 ValueChanged="v => {OnValueSet(v); Value = v; StateHasChanged();}"
                 Value=Value 
                 />

@code {
    [Parameter]
    [EditorRequired]
    public Func<string, Task<IEnumerable<TItem>>> GetItemsByFilter { get; set; }

    [Parameter]
    public Func<TItem, string> GetItemRepresentation { get; set; } = item => item.ToString();

    [Parameter]
    public int MaxItemsShown { get; set; }

    [Parameter]
    public TItem Value { get; set; }

    [Parameter]
    public Action<TItem> OnValueSet { get; set; } = i => { };

    [Parameter]
    public string Label { get; set; }

}
