@using Client.Web.View.Services;

@typeparam TItem

@using DestallMaterials.Blazor.Services
@using DestallMaterials.Blazor.Services.Extensions
@using DestallMaterials.WheelProtection.Extensions.String
@using Microsoft.AspNetCore.Components.Web

@inherits SearchSelectorBase<TItem>

@inject IGlobalClickCatcher globalClickCatcher;

<StringInput
    InputLabel=@InputLabel
    OnValueSet="async s => await OnFilterChange(s)"
    Value=@_filterString
    OnMouseOut=@_onMouseOut
    OnMouseOver=@_onMouseIn>
    @if (_showList)
    {
        string listClass = $"referrables-list " + (InputLabel.HasContent() ? "with-label" : "");
        <ul class="@listClass">
            @foreach (var item in _currentBatch)
            {
                string selected = ItemsComparison(SelectedItem, item) ? "selected" : "";
                <li @onclick="e => { ToggleList(false); _onItemSelect(item); }" class="@selected">
                    @GetItemRepresentation(item)
                </li>
            }
        </ul>
    }
</StringInput>

@code{

    protected override void _onItemSelect(TItem item)
    {
        SelectedItem = item;
        _filterString = GetItemRepresentation(item);
        if (OnItemSelect != null)
        {
            OnItemSelect(item);
        }
        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (SelectedItem != null)
        {
            _filterString = GetItemRepresentation(SelectedItem);
        }
    }

    protected override void OnOuterClick(MouseEventArgs mouseEventArgs)
    {
        base.OnOuterClick(mouseEventArgs);
        ToggleList(false);
    }

    protected override void OnEnterClicked(TItem currentItem)
    {
        SelectedItem = currentItem;
    }

}