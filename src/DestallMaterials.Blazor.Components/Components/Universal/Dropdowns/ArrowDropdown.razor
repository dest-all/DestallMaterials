@using DestallMaterials.Blazor.Services;
@using Microsoft.AspNetCore.Components.Web

@inherits ClickableComponent

@inject IGlobalClickCatcher globalClicksCatcher;
@inject NavigationManager navMan;

<div style="display:inline; padding: 2px"
     @onmouseover="_onMouseIn"
     @onmouseout="_onMouseOut">

    <MudBlazor.MudButton @onclick="async () => Toggle()">
        @Text<i class="material-icons">@Icon</i>
    </MudBlazor.MudButton>
    @if (Open)
    {
        <ul class="dropdown-content">
            @foreach (var option in Options)
            {
                if (option is DropdownMenuOption.Link link)
                {
                    <li>
                        <button @onclick="e => navMan.NavigateTo(link.Href)">
                            @option.Text
                        </button>
                    </li>
                }
                else if (option is DropdownMenuOption.Button button)
                {
                    <li>
                        <button @onclick="e => button.OnClick()">
                            @option.Text
                        </button>
                    </li>
                }
            }
        </ul>
    }
</div>

@code {
    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public bool Open { get; set; }

    [Parameter]
    public IEnumerable<DropdownMenuOption> Options { get; set; }

    protected override async Task OnOuterClickAsync(MouseEventArgs mouseEventArgs)
    {
        Toggle(false);
    }

    string Icon => Open ? "expand_more" : "chevron_right";

    void Toggle(bool? setTo = null)
    {
        if (Open == setTo)
        {
            return;
        }
        Open = !Open;
    }

    bool _mouseOver;
    IDisposable _clickCallback;
}
