@using DestallMaterials.WheelProtection.Extensions.Strings
@using MudBlazor
@typeparam TItem

@{
    RenderFragment<TItem> itemTemplate = ItemTemplate ?? (row => @<Content>
        @GetItemRepresentation(row)
    </Content>);
}
<MudAutocomplete T="TItem"
                 Label=@Label
                 SearchFunc="async (filter, ct) => await GetItemsByFilter(filter, ct)"
                 ToStringFunc="GetItemRepresentation"
                 MaxItems="50"
                 Value="Value"
                 ValueChanged="OnValueSetInner"
                 Disabled=Disabled
                 Clearable=MayBeEmpty
                 OnClearButtonClick="Clear"
                 Class="@Class"
                 Error="HasError"
                 ErrorText=@Error
                 ItemSelectedTemplate="itemTemplate"
                 ItemTemplate="itemTemplate"
                 />



@code {
    [Parameter]
    [EditorRequired]
    public Func<string, CancellationToken, Task<IEnumerable<TItem>>> GetItemsByFilter { get; set; }

    [Parameter]
    public Func<TItem, string> GetItemRepresentation { get; set; } = item => item.ToString();

    [Parameter]
    public int MaxItemsShown { get; set; }

    [Parameter]
    public TItem Value { get; set; }

    [Parameter]
    public Action<TItem> OnValueSet { get; set; } = i => { };

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public string Class { get; set; }

    [Parameter]
    public Action OnClear { get; set; } = () => { };

    [Parameter]
    public bool MayBeEmpty { get; set; } = true;

    [Parameter]
    public string Error { get; set; }

    [Parameter]
    public RenderFragment<TItem> ItemTemplate { get; set; }

    public bool HasError => Error.HasContent();

    string cssClass => $"search-selector-singular {Class}";

    void Clear()
    {
        Value = default;
        OnValueSet(Value);
        OnClear();
    }

    void OnValueSetInner(TItem item)
    {
        Value = item;
        OnValueSet(item);
    }
}
