@using DestallMaterials.Blazor.Components.Universal;
@using DestallMaterials.Blazor.Components.Universal.Containers;

@page "/"


<PageTitle>Index</PageTitle>

<MudBlazor.MudCheckBox @bind-Checked=BoundToWindow Label="Bound to window" />

<EditableLoadedTable PortionSize="@_portionSize"
                     Source="async portion => Enumerable.Range(0, 1000).Skip((portion - 1) * _portionSize).Take(_portionSize).Select(n=>new StringContainer(n.ToString())).ToArray()"
                     TLineModel="StringContainer"
                     Context="line"
                     TableClass="table"
                     BoundToWindow=@BoundToWindow
                     ComputeHashCode="s=>s.String.Select(c => (int)c).Sum()"
                     Save="async s => {Console.WriteLine(s.String); return new StringContainer(s.String + 1.ToString());}"
                     Delete="async i => Console.WriteLine(i.String)">

    <Head>
        <td>Number</td>
    </Head>
    <Line>
        <td>@line</td>
    </Line>
    <EditableLine>
        <td @onclick="() => line.String = line.String + 0.ToString()">@line</td>
    </EditableLine>
</EditableLoadedTable>


@code {
    const int _portionSize = 50;

    bool BoundToWindow = false;

    class StringContainer
    {
        public string String { get; set; } = "";

        public StringContainer(string @string)
        {
            String = @string;
        }

        public override string ToString() => String;

    }

}

